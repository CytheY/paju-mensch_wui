# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           de.paju.mensch.play.controllers.Application.index()
GET		/tui					de.paju.mensch.play.controllers.Application.tui(e: String ?= "", i: String ?= "")
GET		/gameGrid				de.paju.mensch.play.controllers.Application.gameGrid(game: String)
#Login
GET     /login                 de.paju.mensch.play.controllers.Application.login()
POST    /login                 de.paju.mensch.play.controllers.Application.authenticate()
#OpenID Login
GET		/auth					de.paju.mensch.play.controllers.Application.auth()
GET		/verify					@de.paju.mensch.play.controllers.Application.verify()
#GET		/webgui					de.paju.mensch.play.controllers.Application.webGui()
#GET     /:command/:input         de.paju.mensch.play.controllers.Application.nextStep(command: String, input: String)
GET         /init         de.paju.mensch.play.controllers.Application.init(game: String, player: String)
GET         /exit         de.paju.mensch.play.controllers.Application.exit(game: String, player: String)
GET         /doDice         de.paju.mensch.play.controllers.Application.doDice(game: String, player: String)
GET         /socket         de.paju.mensch.play.controllers.Application.socket(game: String, player: String)
GET         /chatSocket         de.paju.mensch.play.controllers.Application.chatSocket(game: String, player: String)
GET         /fig         de.paju.mensch.play.controllers.Application.chooseFigure(game: String, figure: Integer, player: String)
GET         /lobbySocket         de.paju.mensch.play.controllers.Application.getLobbySocket()
GET         /lobby         de.paju.mensch.play.controllers.Application.getLobby()
GET         /begin         de.paju.mensch.play.controllers.Application.begin(game: String)
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)